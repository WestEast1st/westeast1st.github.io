{"version":3,"file":"component---src-templates-tag-js-670cffe4ba29f8968dfd.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/articleIcon.js","webpack://gatsby-starter-blog/./src/components/blogPosts.js","webpack://gatsby-starter-blog/./src/components/postCard.js","webpack://gatsby-starter-blog/./src/templates/tag.js"],"sourcesContent":["import * as React from \"react\"\n\nconst ArticleIcon = ({tags}) => {\n    const arrayConverter = ((t)=>{\n        if (!Array.isArray(t)) return new Array(t)\n        return t\n    })\n\n    const icon = ((tags) => {\n        tags = tags.map((tag) => {\n            return tag.toLowerCase()\n        })\n        if (tags.includes(\"linux\".toLowerCase())) return \"🐧\"\n        if (tags.includes(\"windows\".toLowerCase())) return \"🪟\"\n        if (tags.includes(\"macos\".toLowerCase())) return \"🍎\"\n        if (tags.includes(\"android\".toLowerCase())) return \"🤖\"\n        if (tags.includes(\"ios\".toLowerCase())) return \"📱\"\n        if (tags.includes(\"web\".toLowerCase())) return \"🌐\"\n        if (tags.includes(\"network\".toLowerCase())) return \"🌐\"\n        if (tags.includes(\"programming\".toLowerCase())) return \"👨‍💻\"\n        if (tags.includes(\"security\".toLowerCase())) return \"🔐\"\n        if (tags.includes(\"hacking\".toLowerCase())) return \"🔐\"\n        if (tags.includes(\"ctf\".toLowerCase())) return \"🚩\"\n        if (tags.includes(\"writeup\".toLowerCase())) return \"🚩\"\n        if (tags.includes(\"crypto\".toLowerCase())) return \"🔑\"\n        if (tags.includes(\"forensic\".toLowerCase())) return \"🔍\"\n        if (tags.includes(\"reversing\".toLowerCase())) return \"🔎\"\n        if (tags.includes(\"pwn\".toLowerCase())) return \"🔫\"\n        if (tags.includes(\"web\".toLowerCase())) return \"🌐\"\n        if (tags.includes(\"misc\".toLowerCase())) return \"🔧\"\n        if (tags.includes(\"miscellaneous\".toLowerCase())) return \"🔧\"\n        if (tags.includes(\"diary\".toLowerCase())) return \"📔\"\n        if (tags.includes(\"note\".toLowerCase())) return \"📝\"\n        if (tags.includes(\"post\".toLowerCase())) return \"📖\"\n        if (tags.includes(\"blog\".toLowerCase())) return \"📖\"\n        if (tags.includes(\"article\".toLowerCase())) return \"📖\"\n        if (tags.includes(\"review\".toLowerCase())) return \"📖\"\n        if (tags.includes(\"book\".toLowerCase())) return \"📖\"\n        if (tags.includes(\"movie\".toLowerCase())) return \"🎬\"\n        if (tags.includes(\"anime\".toLowerCase())) return \"🎬\"\n        if (tags.includes(\"game\".toLowerCase())) return \"🎮\"\n        if (tags.includes(\"music\".toLowerCase())) return \"🎵\"\n        if (tags.includes(\"photo\".toLowerCase())) return \"📷\"\n        if (tags.includes(\"picture\".toLowerCase())) return \"📷\"\n        if (tags.includes(\"image\".toLowerCase())) return \"🌅\"\n        if (tags.includes(\"video\".toLowerCase())) return \"📹\"\n        return \"🏷️\"\n    })(arrayConverter(tags))\n    return (<span>{icon}</span>)\n}\n\nexport default ArticleIcon","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport PostCard from \"../components/postCard\"\n\nconst BlogPosts = ({posts}) => {\n    return (\n        <ol style={{ listStyle: `none` }}>\n            {posts.map(post => {\n            if (post.frontmatter.title === \"About Me\") return\n            const title = post.frontmatter.title || post.fields.slug\n\n            return (\n                <li key={post.fields.slug}>\n                <PostCard post={post} title={title} />\n                </li>\n            )\n            })}\n        </ol>\n  )\n}\nexport default BlogPosts","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport ArticleIcon from \"./articleIcon\"\n\nconst PostCard = ({post, title}) => {\n    return (\n        <article\n            className=\"post-list-item\"\n            itemScope\n            itemType=\"http://schema.org/Article\"\n        > \n            <header>\n                <small>🕒 {post.frontmatter.date||post.frontmatter.createDate}</small>\n                <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                    <span itemProp=\"headline\"><ArticleIcon tags={post.frontmatter.tags}/> {title}</span>\n                    </Link>\n                </h2>\n                <small>tags: {\n                    post.frontmatter.tags.map((tag) => {\n                        return (\n                            <Link className=\"taglink\" key={tag} to={`/tags/${tag}`} >\n                                    <ArticleIcon tags={tag}/> {tag}\n                            </Link>\n                        )\n                    }) || \"\"\n                }\n                </small>\n            </header>\n            <section>\n            <p\n                dangerouslySetInnerHTML={{\n                __html: post.frontmatter.description || post.excerpt,\n                }}\n                itemProp=\"description\"\n            />\n            </section>\n        </article>\n    )\n    \n\n}\n\nexport default PostCard","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\n// Components\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport PostCard from \"../components/postCard\"\nimport BlogPosts from \"../components/blogPosts\"\nimport ArticleIcon from \"../components/articleIcon\"\n\nconst TagPosts = ({ pageContext, data }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { tag } = pageContext\n  const { totalCount } = data.allMarkdownRemark\n  const posts = data.allMarkdownRemark.nodes\n  const icon = <ArticleIcon tags={tag}/>\n  const tagHeader = (\n    <h2 itemProp=\"headline\">\n      {totalCount}{totalCount === 1 ? \" post\" : \" posts\"} tagged with {icon} \"{tag}\"\n    </h2>\n  )\n  return (\n    <Layout location title={siteTitle}>\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          {tagHeader}\n        </header>\n        <BlogPosts posts={posts} />\n        <Link className=\"blog-link\" to=\"/\">📝 TopPage</Link> / <Link className=\"blog-link\" to=\"/tags\">🏷️ Tags</Link>\n      </article>\n    </Layout>\n  )\n}\n\nexport default TagPosts\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    site {\n        siteMetadata {\n            title\n        }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: {frontmatter: {createDate: DESC}}\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          createDate(formatString: \"MMMM DD, YYYY\")\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          tags\n          description\n        }\n        excerpt\n      }\n    }\n  }\n`"],"names":["tags","icon","map","tag","toLowerCase","includes","t","Array","isArray","posts","style","listStyle","post","frontmatter","title","fields","slug","key","className","itemScope","itemType","date","createDate","Link","to","itemProp","dangerouslySetInnerHTML","__html","description","excerpt","pageContext","data","siteTitle","site","siteMetadata","totalCount","allMarkdownRemark","nodes","tagHeader","location"],"sourceRoot":""}