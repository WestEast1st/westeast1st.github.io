{"version":3,"file":"component---src-templates-tag-js-08af5a7dde8fb1d5ebe8.js","mappings":"uJAuCA,IApCe,IAAoC,IAAnC,SAAEA,EAAQ,MAAEC,EAAK,SAAEC,GAAU,EAC3C,MACMC,EAD6B,MAChBH,EAASI,SAC5B,IAAIC,EAoBJ,OAjBEA,EADEF,EAEA,2BACE,sBAAIG,UAAU,gBACZ,gBAAC,EAAAC,KAAI,CAACC,GAAG,KAAKP,IAEhB,gBAAC,EAAAM,KAAI,CAACC,GAAG,YAAU,YAAgB,KACnC,gBAAC,EAAAD,KAAI,CAACC,GAAG,gCAA8B,YAKzC,gBAAC,EAAAD,KAAI,CAACD,UAAU,mBAAmBE,GAAG,KACnCP,GAML,uBAAKK,UAAU,iBAAiB,oBAAmBH,GACjD,0BAAQG,UAAU,iBAAiBD,GACnC,4BAAOH,GACP,oCACK,IAAIO,MAAOC,cAAa,mBAE3B,qBAAGC,KAAK,4BAA0B,WAEhC,C,gECkDV,UA7Ea,IAA4B,IAAD,MAA1B,YAAEC,EAAW,KAAEC,GAAM,EACjC,MAAMC,GAAkC,QAAtB,EAAAD,EAAKE,KAAKC,oBAAY,aAAtB,EAAwBf,QAAK,SACzC,IAAEgB,GAAQL,GACV,MAAEM,EAAK,WAAEC,GAAeN,EAAKO,kBAC7BC,EAAeF,EAAU,SACd,IAAfA,EAAmB,GAAK,KAAG,iBACZF,EAAG,IACpB,OACE,gBAAC,IAAM,CAACjB,UAAQ,EAACC,MAAOa,GACtB,2BACER,UAAU,YACVgB,WAAS,EACTC,SAAS,6BAET,8BACE,sBAAIC,SAAS,YAAYH,IAE3B,sBAAII,MAAO,CAAEC,UAAU,SAClBR,EAAMS,KAAI,IAAe,IAAd,KAAEC,GAAM,EAChB,MAAM,KAAEC,GAASD,EAAKE,QAChB,MAAE7B,GAAU2B,EAAKG,YACvB,OACI,sBAAIC,IAAKH,GACT,2BACIvB,UAAU,iBACVgB,WAAS,EACTC,SAAS,6BAET,8BACA,0BACI,gBAAC,EAAAhB,KAAI,CAACC,GAAIqB,EAAML,SAAS,OACzB,wBAAMA,SAAS,YAAYvB,MAI/B,+BACA,qBACIgC,wBAAyB,CACzBC,OAAQN,EAAKO,SAAW,QAExBX,SAAS,kBAIZ,IAGb,gBAAC,EAAAjB,KAAI,CAACC,GAAG,KAAG,aAGX,C","sources":["webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/templates/tag.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <div>\n        <h1 className=\"main-heading\">\n          <Link to=\"/\">{title}</Link>\n        </h1>\n        <Link to=\"/README/\">About Me</Link> / \n        <Link to=\"https://twitter.com/a_zara_n\">Twitter</Link>\n      </div>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n        Â© {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\n// Components\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\n\n\nconst Tags = ({ pageContext, data }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? \"\" : \"s\"\n  } tagged with \"${tag}\"`\n  return (\n    <Layout location title={siteTitle}>\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{tagHeader}</h1>\n        </header>\n        <ol style={{ listStyle: `none` }}>\n            {edges.map(({ node }) => {\n                const { slug } = node.fields\n                const { title } = node.frontmatter\n                return (\n                    <li key={slug}>\n                    <article\n                        className=\"post-list-item\"\n                        itemScope\n                        itemType=\"http://schema.org/Article\"\n                    >\n                        <header>\n                        <h2>\n                            <Link to={slug} itemProp=\"url\">\n                            <span itemProp=\"headline\">{title}</span>\n                            </Link>\n                        </h2>\n                        </header>\n                        <section>\n                        <p\n                            dangerouslySetInnerHTML={{\n                            __html: node.excerpt || \"aaaa\",\n                            }}\n                            itemProp=\"description\"\n                        />\n                        </section>\n                    </article>\n                    </li>\n                )\n            })}\n            <Link to=\"/\">TopPage</Link>\n        </ol>\n      </article>\n    </Layout>\n  )\n}\n\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    site {\n        siteMetadata {\n            title\n        }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: {frontmatter: {date: ASC}}\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`"],"names":["location","title","children","isRootPath","pathname","header","className","Link","to","Date","getFullYear","href","pageContext","data","siteTitle","site","siteMetadata","tag","edges","totalCount","allMarkdownRemark","tagHeader","itemScope","itemType","itemProp","style","listStyle","map","node","slug","fields","frontmatter","key","dangerouslySetInnerHTML","__html","excerpt"],"sourceRoot":""}