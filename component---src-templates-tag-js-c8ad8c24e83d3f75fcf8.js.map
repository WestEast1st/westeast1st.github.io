{"version":3,"file":"component---src-templates-tag-js-c8ad8c24e83d3f75fcf8.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/common/articleIcon.js","webpack://gatsby-starter-blog/./src/components/common/postTag.js","webpack://gatsby-starter-blog/./src/components/posts/postCard.js","webpack://gatsby-starter-blog/./src/components/posts/blogPosts.js","webpack://gatsby-starter-blog/./src/templates/tag.js"],"sourcesContent":["import * as React from \"react\"\n\nconst ArticleIcon = ({tags}) => {\n    const arrayConverter = ((t)=>{\n        if (!Array.isArray(t)) return new Array(t)\n        return t\n    })\n\n    const icon = ((tags) => {\n        tags = tags.map((tag) => {\n            return tag.toLowerCase()\n        })\n        if (tags.includes(\"Letter\".toLowerCase())) return \"✉️\"\n        if (tags.includes(\"linux\".toLowerCase())) return \"🐧\"\n        if (tags.includes(\"windows\".toLowerCase())) return \"🪟\"\n        if (tags.includes(\"microsoft\".toLowerCase())) return \"🪟\"\n        if (tags.includes(\"macos\".toLowerCase())) return \"🍎\"\n        if (tags.includes(\"android\".toLowerCase())) return \"🤖\"\n        if (tags.includes(\"ios\".toLowerCase())) return \"📱\"\n        if (tags.includes(\"web\".toLowerCase())) return \"🌐\"\n        if (tags.includes(\"network\".toLowerCase())) return \"🌐\"\n        if (tags.includes(\"cloud\".toLowerCase())) return \"☁️\"\n        if (tags.includes(\"aws\".toLowerCase())) return \"☁️\"\n        if (tags.includes(\"gcp\".toLowerCase())) return \"☁️\"\n        if (tags.includes(\"azure\".toLowerCase())) return \"☁️\"\n        if (tags.includes(\"programming\".toLowerCase())) return \"👨‍💻\"\n        if (tags.includes(\"develop\".toLowerCase())) return \"⚙️\"\n        if (tags.includes(\"operation\".toLowerCase())) return \"⚙️\"\n        if (tags.includes(\"bughunt\".toLowerCase())) return \"🐝\"\n        if (tags.includes(\"security\".toLowerCase())) return \"🔐\"\n        if (tags.includes(\"hacking\".toLowerCase())) return \"🔐\"\n        if (tags.includes(\"ctf\".toLowerCase())) return \"🚩\"\n        if (tags.includes(\"writeup\".toLowerCase())) return \"🚩\"\n        if (tags.includes(\"crypto\".toLowerCase())) return \"🔑\"\n        if (tags.includes(\"forensic\".toLowerCase())) return \"🔍\"\n        if (tags.includes(\"reversing\".toLowerCase())) return \"🔎\"\n        if (tags.includes(\"pwn\".toLowerCase())) return \"🔫\"\n        if (tags.includes(\"web\".toLowerCase())) return \"🌐\"\n        if (tags.includes(\"misc\".toLowerCase())) return \"🔧\"\n        if (tags.includes(\"miscellaneous\".toLowerCase())) return \"🔧\"\n        if (tags.includes(\"diary\".toLowerCase())) return \"📔\"\n        if (tags.includes(\"note\".toLowerCase())) return \"📝\"\n        if (tags.includes(\"post\".toLowerCase())) return \"📖\"\n        if (tags.includes(\"blog\".toLowerCase())) return \"📖\"\n        if (tags.includes(\"article\".toLowerCase())) return \"📖\"\n        if (tags.includes(\"review\".toLowerCase())) return \"📖\"\n        if (tags.includes(\"book\".toLowerCase())) return \"📖\"\n        if (tags.includes(\"movie\".toLowerCase())) return \"🎬\"\n        if (tags.includes(\"anime\".toLowerCase())) return \"🎬\"\n        if (tags.includes(\"game\".toLowerCase())) return \"🎮\"\n        if (tags.includes(\"music\".toLowerCase())) return \"🎵\"\n        if (tags.includes(\"photo\".toLowerCase())) return \"📷\"\n        if (tags.includes(\"picture\".toLowerCase())) return \"📷\"\n        if (tags.includes(\"image\".toLowerCase())) return \"🌅\"\n        if (tags.includes(\"video\".toLowerCase())) return \"📹\"\n        return \"🏷️\"\n    })(arrayConverter(tags))\n    return (<span>{icon}</span>)\n}\n\nexport default ArticleIcon","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport ArticleIcon from \"./articleIcon\"\n\nconst PostTag = ({ postTagName }) => {\n  \n    return (\n      <Link className=\"taglink\" to={`/tags/${postTagName}`}><ArticleIcon tags={postTagName}/> {postTagName}</Link>\n    )\n  }\n  \n  export default PostTag\n  ","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport ArticleIcon from \"../common/articleIcon\"\nimport PostTag from \"../common/postTag\"\nconst PostCard = ({post, title}) => {\n    return (\n        <article\n            className=\"post-list-item\"\n            itemScope\n            itemType=\"http://schema.org/Article\"\n        > \n            <header>\n                <small>🕒 {post.frontmatter.date||post.frontmatter.createDate}</small>\n                <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                    <span itemProp=\"headline\"><ArticleIcon tags={post.frontmatter.tags}/> {title}</span>\n                    </Link>\n                </h2>\n                <small>tags: {\n                    post.frontmatter.tags.map((tag) => {\n                        return (\n                            <PostTag key={tag} postTagName={tag} />\n                        )\n                    }) || \"\"\n                }\n                </small>\n            </header>\n            <section>\n            <p\n                dangerouslySetInnerHTML={{\n                __html: post.frontmatter.description || post.excerpt,\n                }}\n                itemProp=\"description\"\n            />\n            </section>\n        </article>\n    )\n    \n\n}\n\nexport default PostCard","import * as React from \"react\"\nimport PostCard from \"./postCard\"\n\nconst BlogPosts = ({posts}) => {\n    return (\n        <ol style={{ listStyle: `none` }}>\n            {posts.map(post => {\n            if (post.frontmatter.title === \"About Me\") return null\n            const title = post.frontmatter.title || post.fields.slug\n\n            return (\n                <li key={post.fields.slug}>\n                <PostCard post={post} title={title} />\n                </li>\n            )\n            })}\n        </ol>\n  )\n}\nexport default BlogPosts","import React from \"react\"\n\n// Components\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/common/layout\"\nimport BlogPosts from \"../components/posts/blogPosts\"\nimport ArticleIcon from \"../components/common/articleIcon\"\n\nconst TagPosts = ({ pageContext, data }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { tag } = pageContext\n  const { totalCount } = data.allMarkdownRemark\n  const posts = data.allMarkdownRemark.nodes\n  const icon = <ArticleIcon tags={tag} />\n  const tagHeader = (\n    <h2 itemProp=\"headline\">\n      {totalCount}\n      {totalCount === 1 ? \" post\" : \" posts\"} tagged with {icon} \"{tag}\"\n    </h2>\n  )\n  return (\n    <Layout location title={siteTitle}>\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>{tagHeader}</header>\n        <BlogPosts posts={posts} />\n        <Link className=\"blog-link\" to=\"/\">\n          📝 TopPage\n        </Link>{\" \"}\n        /{\" \"}\n        <Link className=\"blog-link\" to=\"/tags\">\n          🏷️ Tags\n        </Link>\n      </article>\n    </Layout>\n  )\n}\n\nexport default TagPosts\n\nexport const pageQuery = graphql`\n  query ($tag: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { frontmatter: { createDate: DESC } }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          createDate(formatString: \"MMMM DD, YYYY\")\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          tags\n          description\n        }\n        excerpt\n      }\n    }\n  }\n`\n"],"names":["tags","icon","map","tag","toLowerCase","includes","t","Array","isArray","postTagName","Link","className","to","post","title","itemScope","itemType","frontmatter","date","createDate","fields","slug","itemProp","key","dangerouslySetInnerHTML","__html","description","excerpt","posts","style","listStyle","pageContext","data","siteTitle","site","siteMetadata","totalCount","allMarkdownRemark","nodes","tagHeader","location"],"sourceRoot":""}