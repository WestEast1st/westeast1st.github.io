{"version":3,"file":"component---src-templates-tags-js-89e27fc7a4834ba4fa85.js","mappings":"uJA+BA,IA5Be,IAAoC,IAAnC,SAAEA,EAAQ,MAAEC,EAAK,SAAEC,GAAU,EAC3C,MACMC,EAD6B,MAChBH,EAASI,SAC5B,IAAIC,EAYJ,OAXAA,EACE,2BACE,sBAAIC,UAAU,gBACZ,gBAAC,EAAAC,KAAI,CAACC,GAAG,KAAKP,IAEhB,gBAAC,EAAAM,KAAI,CAACC,GAAG,YAAU,YAAgB,KACnC,gBAAC,EAAAD,KAAI,CAACC,GAAG,gCAA8B,YAMzC,uBAAKF,UAAU,iBAAiB,oBAAmBH,GACjD,0BAAQG,UAAU,iBAAiBD,GACnC,4BAAOH,GACP,oCACK,IAAIO,MAAOC,cAAa,mBAE3B,qBAAGC,KAAK,4BAA0B,WAEhC,C,gECoBV,UAvCa,IAA4B,IAAD,MAA1B,YAAEC,EAAW,KAAEC,GAAM,EACjC,MAAMC,GAAkC,QAAtB,EAAAD,EAAKE,KAAKC,oBAAY,aAAtB,EAAwBf,QAAK,QAG/C,OACE,gBAAC,IAAM,CAACD,UAAQ,EAACC,MAAOa,GACtB,2BACER,UAAU,YACVW,WAAS,EACTC,SAAS,6BAET,8BACE,sBAAIC,SAAS,YATN,iBAWT,sBAAIC,MAAO,CAAEC,UAAU,SAClBR,EAAKS,kBAAkBC,MAAMC,KAAI,IAAiC,IAAhC,WAAEC,EAAU,WAAEC,GAAY,EAC3D,MAAMC,EAAO,SAAYF,EAAU,IACnC,OAAQ,sBAAIG,IAAKH,GACf,2BACInB,UAAU,iBACVW,WAAS,EACTC,SAAS,6BAET,8BACA,0BACI,gBAAC,EAAAX,KAAI,CAACC,GAAImB,EAASR,SAAS,OAC5B,wBAAMA,SAAS,YAAU,OAAMM,EAAU,MAAKC,OAKjD,IAET,gBAAC,EAAAnB,KAAI,CAACC,GAAG,KAAG,aAGX,C","sources":["webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/templates/tags.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n  header = (\n    <div>\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n      <Link to=\"/README/\">About Me</Link> / \n      <Link to=\"https://twitter.com/a_zara_n\">Twitter</Link>\n    </div>\n  )\n\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n        ¬© {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\n// Components\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\n\n\nconst Tags = ({ pageContext, data }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  \n  const tagHeader = `All Tags üè∑Ô∏è`\n  return (\n    <Layout location title={siteTitle}>\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{tagHeader}</h1>\n        </header>\n        <ol style={{ listStyle: `none` }}>\n            {data.allMarkdownRemark.group.map(({ fieldValue, totalCount }) => {\n              const taglink = `/tags/${fieldValue}/`\n              return (<li key={fieldValue}>\n                <article\n                    className=\"post-list-item\"\n                    itemScope\n                    itemType=\"http://schema.org/Article\"\n                >\n                    <header>\n                    <h2>\n                        <Link to={taglink} itemProp=\"url\">\n                        <span itemProp=\"headline\">üè∑Ô∏è {fieldValue} : {totalCount}</span>\n                        </Link>\n                    </h2>\n                    </header>\n                </article>\n                </li>)\n            })}\n            <Link to=\"/\">TopPage</Link>\n        </ol>\n      </article>\n    </Layout>\n  )\n}\nexport default Tags\n\nexport const pageQuery = graphql`\n  {\n    site {\n        siteMetadata {\n            title\n        }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: {frontmatter: {date: ASC}}\n    ) {\n      group(field: {frontmatter: {tags: SELECT}}){\n        totalCount\n        fieldValue\n      }\n    }\n  }\n`"],"names":["location","title","children","isRootPath","pathname","header","className","Link","to","Date","getFullYear","href","pageContext","data","siteTitle","site","siteMetadata","itemScope","itemType","itemProp","style","listStyle","allMarkdownRemark","group","map","fieldValue","totalCount","taglink","key"],"sourceRoot":""}